// app/layout.tsx
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import NotificationsModal from '@/components/modals/NotificationModal';

import RegisterModal from '@/components/modals/RegisterModal';
import ToasterProvider from './providers/ToasterProvider';
import LoginModal from '@/components/modals/LoginModal';
import getCurrentUser from './actions/getCurrentUser';
import Sidebar from '@/components/sidebar/Sidebar';
import RentModal from '@/components/modals/ListingModal';
import ProfileModal from '@/components/modals/ProfileModal';
import ProfileGalleryModal from '@/components/modals/profileGalleryModal';
import ClientOnly from '@/components/ClientOnly';
import ClientProviders from '@/components/ClientProviders';
import MessageModal from '@/components/modals/MessageModal';
import ListingGalleryModal from '@/components/modals/listingGalleryModal';

import { CategoryProvider } from '@/CategoryContext';
import { FilterProvider } from '@/FilterContext';
import FilterModal from '@/components/modals/FilterModal';
import ForgotPasswordModal from '@/components/modals/ForgotPasswordModal';
import ResetPasswordModal from '@/components/modals/ResetPasswordModal';
import SubscribeModal from '@/components/modals/SubscribeModal';

import InboxModal from '@/components/modals/InboxModal';
import PostModal from '@/components/modals/PostModal';
import { ColorProvider } from './context/ColorContext';
import StripeCheckoutModal from '@/components/modals/StripeCheckoutModal';
import ShopModal from '@/components/modals/ShopModal';
import CreatePostModal from '@/components/modals/CreatePostModal';
import ReservationModal from '@/components/modals/ReservationModal';

import AuthModalController from '@/components/AuthModalController';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export const dynamic = 'force-dynamic';

const inter = Inter({
  subsets: ['latin'],
  display: 'swap',
})

export default async function RootLayout({
  children, 
}: {
  children: React.ReactNode
}) {
  const currentUser = await getCurrentUser();
  console.log('Current User:', currentUser ? 'Logged in' : 'Not logged in');

  const isFirstTimeUser =
    currentUser &&
    new Date().getTime() - new Date(currentUser.createdAt).getTime() < 5 * 60 * 1000;

  return (
    <FilterProvider>
      <CategoryProvider>
        <ClientProviders>
          <ColorProvider>
            <html lang="en">
              <body className={inter.className}>
                {/* Always show the sidebar, signed in or not */}
                <div className="min-h-screen flex">
                  <div className="hidden md:block fixed top-0 left-0 bottom-0 bg-white z-50">
                    <Sidebar currentUser={currentUser ?? null} />
                  </div>

                  {/* Main content shifts right when sidebar is visible on md+ */}
                  <div className="flex-1 md:pl-52">
                    <main className="md:pt-0 pb-16 md:pb-0">
                      {children}
                    </main>
                  </div>
                </div>

       

                <ShopModal/>
                <ToasterProvider/>
           
                <ReservationModal/>
                <RentModal/>
                <CreatePostModal />
                <InboxModal/>
                <ProfileModal/>
                <StripeCheckoutModal /> 
                <ProfileGalleryModal/> 
                <ListingGalleryModal/>
                <ForgotPasswordModal/> 
                <ResetPasswordModal/>
                <MessageModal />
                <SubscribeModal/>
                <NotificationsModal />
                <PostModal/>
                <FilterModal/>
                <LoginModal />
                <RegisterModal />
              </body>
            </html>
          </ColorProvider>
        </ClientProviders>
      </CategoryProvider>
    </FilterProvider>
  )
}
